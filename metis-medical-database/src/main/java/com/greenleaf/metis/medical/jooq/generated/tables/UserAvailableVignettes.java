/*
 * This file is generated by jOOQ.
 */
package com.greenleaf.metis.medical.jooq.generated.tables;


import com.greenleaf.metis.medical.jooq.generated.Keys;
import com.greenleaf.metis.medical.jooq.generated.Public;
import com.greenleaf.metis.medical.jooq.generated.tables.records.UserAvailableVignettesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserAvailableVignettes extends TableImpl<UserAvailableVignettesRecord> {

    private static final long serialVersionUID = 1460417040;

    /**
     * The reference instance of <code>public.user_available_vignettes</code>
     */
    public static final UserAvailableVignettes USER_AVAILABLE_VIGNETTES = new UserAvailableVignettes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserAvailableVignettesRecord> getRecordType() {
        return UserAvailableVignettesRecord.class;
    }

    /**
     * The column <code>public.user_available_vignettes.phase_1</code>.
     */
    public final TableField<UserAvailableVignettesRecord, String> PHASE_1 = createField("phase_1", org.jooq.impl.SQLDataType.VARCHAR(1000).nullable(false), this, "");

    /**
     * The column <code>public.user_available_vignettes.phase_2</code>.
     */
    public final TableField<UserAvailableVignettesRecord, String> PHASE_2 = createField("phase_2", org.jooq.impl.SQLDataType.VARCHAR(1000).nullable(false), this, "");

    /**
     * The column <code>public.user_available_vignettes.username</code>.
     */
    public final TableField<UserAvailableVignettesRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR(1000).nullable(false), this, "");

    /**
     * Create a <code>public.user_available_vignettes</code> table reference
     */
    public UserAvailableVignettes() {
        this(DSL.name("user_available_vignettes"), null);
    }

    /**
     * Create an aliased <code>public.user_available_vignettes</code> table reference
     */
    public UserAvailableVignettes(String alias) {
        this(DSL.name(alias), USER_AVAILABLE_VIGNETTES);
    }

    /**
     * Create an aliased <code>public.user_available_vignettes</code> table reference
     */
    public UserAvailableVignettes(Name alias) {
        this(alias, USER_AVAILABLE_VIGNETTES);
    }

    private UserAvailableVignettes(Name alias, Table<UserAvailableVignettesRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserAvailableVignettes(Name alias, Table<UserAvailableVignettesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> UserAvailableVignettes(Table<O> child, ForeignKey<O, UserAvailableVignettesRecord> key) {
        super(child, key, USER_AVAILABLE_VIGNETTES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserAvailableVignettesRecord> getPrimaryKey() {
        return Keys.UAV_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserAvailableVignettesRecord>> getKeys() {
        return Arrays.<UniqueKey<UserAvailableVignettesRecord>>asList(Keys.UAV_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UserAvailableVignettesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserAvailableVignettesRecord, ?>>asList(Keys.USER_AVAILABLE_VIGNETTES__USER_AVAILABLE_VIGNETTES);
    }

    public Users users() {
        return new Users(this, Keys.USER_AVAILABLE_VIGNETTES__USER_AVAILABLE_VIGNETTES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserAvailableVignettes as(String alias) {
        return new UserAvailableVignettes(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserAvailableVignettes as(Name alias) {
        return new UserAvailableVignettes(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserAvailableVignettes rename(String name) {
        return new UserAvailableVignettes(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserAvailableVignettes rename(Name name) {
        return new UserAvailableVignettes(name, null);
    }
}

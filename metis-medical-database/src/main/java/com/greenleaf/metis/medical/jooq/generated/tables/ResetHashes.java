/*
 * This file is generated by jOOQ.
 */
package com.greenleaf.metis.medical.jooq.generated.tables;


import com.greenleaf.metis.medical.jooq.generated.Keys;
import com.greenleaf.metis.medical.jooq.generated.Public;
import com.greenleaf.metis.medical.jooq.generated.tables.records.ResetHashesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResetHashes extends TableImpl<ResetHashesRecord> {

    private static final long serialVersionUID = 1209633510;

    /**
     * The reference instance of <code>public.reset_hashes</code>
     */
    public static final ResetHashes RESET_HASHES = new ResetHashes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ResetHashesRecord> getRecordType() {
        return ResetHashesRecord.class;
    }

    /**
     * The column <code>public.reset_hashes.hash</code>.
     */
    public final TableField<ResetHashesRecord, String> HASH = createField("hash", org.jooq.impl.SQLDataType.VARCHAR(1000).nullable(false), this, "");

    /**
     * The column <code>public.reset_hashes.username</code>.
     */
    public final TableField<ResetHashesRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR(1000).nullable(false), this, "");

    /**
     * Create a <code>public.reset_hashes</code> table reference
     */
    public ResetHashes() {
        this(DSL.name("reset_hashes"), null);
    }

    /**
     * Create an aliased <code>public.reset_hashes</code> table reference
     */
    public ResetHashes(String alias) {
        this(DSL.name(alias), RESET_HASHES);
    }

    /**
     * Create an aliased <code>public.reset_hashes</code> table reference
     */
    public ResetHashes(Name alias) {
        this(alias, RESET_HASHES);
    }

    private ResetHashes(Name alias, Table<ResetHashesRecord> aliased) {
        this(alias, aliased, null);
    }

    private ResetHashes(Name alias, Table<ResetHashesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ResetHashes(Table<O> child, ForeignKey<O, ResetHashesRecord> key) {
        super(child, key, RESET_HASHES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ResetHashesRecord> getPrimaryKey() {
        return Keys.RH_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ResetHashesRecord>> getKeys() {
        return Arrays.<UniqueKey<ResetHashesRecord>>asList(Keys.RH_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ResetHashesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ResetHashesRecord, ?>>asList(Keys.RESET_HASHES__RESET_HASHES_FK);
    }

    public Users users() {
        return new Users(this, Keys.RESET_HASHES__RESET_HASHES_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResetHashes as(String alias) {
        return new ResetHashes(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResetHashes as(Name alias) {
        return new ResetHashes(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ResetHashes rename(String name) {
        return new ResetHashes(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ResetHashes rename(Name name) {
        return new ResetHashes(name, null);
    }
}

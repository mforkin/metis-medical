/*
 * This file is generated by jOOQ.
 */
package com.greenleaf.metis.medical.jooq.generated.tables;


import com.greenleaf.metis.medical.jooq.generated.Keys;
import com.greenleaf.metis.medical.jooq.generated.Public;
import com.greenleaf.metis.medical.jooq.generated.tables.records.VignetteStageRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VignetteStage extends TableImpl<VignetteStageRecord> {

    private static final long serialVersionUID = 140489858;

    /**
     * The reference instance of <code>public.vignette_stage</code>
     */
    public static final VignetteStage VIGNETTE_STAGE = new VignetteStage();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VignetteStageRecord> getRecordType() {
        return VignetteStageRecord.class;
    }

    /**
     * The column <code>public.vignette_stage.vignette_id</code>.
     */
    public final TableField<VignetteStageRecord, Short> VIGNETTE_ID = createField("vignette_id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>public.vignette_stage.stage_id</code>.
     */
    public final TableField<VignetteStageRecord, Short> STAGE_ID = createField("stage_id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * Create a <code>public.vignette_stage</code> table reference
     */
    public VignetteStage() {
        this(DSL.name("vignette_stage"), null);
    }

    /**
     * Create an aliased <code>public.vignette_stage</code> table reference
     */
    public VignetteStage(String alias) {
        this(DSL.name(alias), VIGNETTE_STAGE);
    }

    /**
     * Create an aliased <code>public.vignette_stage</code> table reference
     */
    public VignetteStage(Name alias) {
        this(alias, VIGNETTE_STAGE);
    }

    private VignetteStage(Name alias, Table<VignetteStageRecord> aliased) {
        this(alias, aliased, null);
    }

    private VignetteStage(Name alias, Table<VignetteStageRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> VignetteStage(Table<O> child, ForeignKey<O, VignetteStageRecord> key) {
        super(child, key, VIGNETTE_STAGE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<VignetteStageRecord> getPrimaryKey() {
        return Keys.VIGNETTE_STAGE_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<VignetteStageRecord>> getKeys() {
        return Arrays.<UniqueKey<VignetteStageRecord>>asList(Keys.VIGNETTE_STAGE_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<VignetteStageRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<VignetteStageRecord, ?>>asList(Keys.VIGNETTE_STAGE__VIG_STAGE_VIG_FK, Keys.VIGNETTE_STAGE__VIG_STAGE_STAGE_FK);
    }

    public Vignette vignette() {
        return new Vignette(this, Keys.VIGNETTE_STAGE__VIG_STAGE_VIG_FK);
    }

    public Stage stage() {
        return new Stage(this, Keys.VIGNETTE_STAGE__VIG_STAGE_STAGE_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VignetteStage as(String alias) {
        return new VignetteStage(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VignetteStage as(Name alias) {
        return new VignetteStage(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VignetteStage rename(String name) {
        return new VignetteStage(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VignetteStage rename(Name name) {
        return new VignetteStage(name, null);
    }
}

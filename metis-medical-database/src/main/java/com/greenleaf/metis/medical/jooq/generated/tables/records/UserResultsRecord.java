/*
 * This file is generated by jOOQ.
 */
package com.greenleaf.metis.medical.jooq.generated.tables.records;


import com.greenleaf.metis.medical.jooq.generated.tables.UserResults;

import java.time.OffsetDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserResultsRecord extends UpdatableRecordImpl<UserResultsRecord> implements Record4<Integer, String, OffsetDateTime, Integer> {

    private static final long serialVersionUID = 294259321;

    /**
     * Setter for <code>public.user_results.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.user_results.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.user_results.username</code>.
     */
    public void setUsername(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.user_results.username</code>.
     */
    public String getUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.user_results.submission_datetime</code>.
     */
    public void setSubmissionDatetime(OffsetDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.user_results.submission_datetime</code>.
     */
    public OffsetDateTime getSubmissionDatetime() {
        return (OffsetDateTime) get(2);
    }

    /**
     * Setter for <code>public.user_results.iteration</code>.
     */
    public void setIteration(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.user_results.iteration</code>.
     */
    public Integer getIteration() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, OffsetDateTime, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, OffsetDateTime, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return UserResults.USER_RESULTS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return UserResults.USER_RESULTS.USERNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field3() {
        return UserResults.USER_RESULTS.SUBMISSION_DATETIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return UserResults.USER_RESULTS.ITERATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime component3() {
        return getSubmissionDatetime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getIteration();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime value3() {
        return getSubmissionDatetime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getIteration();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserResultsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserResultsRecord value2(String value) {
        setUsername(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserResultsRecord value3(OffsetDateTime value) {
        setSubmissionDatetime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserResultsRecord value4(Integer value) {
        setIteration(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserResultsRecord values(Integer value1, String value2, OffsetDateTime value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserResultsRecord
     */
    public UserResultsRecord() {
        super(UserResults.USER_RESULTS);
    }

    /**
     * Create a detached, initialised UserResultsRecord
     */
    public UserResultsRecord(Integer id, String username, OffsetDateTime submissionDatetime, Integer iteration) {
        super(UserResults.USER_RESULTS);

        set(0, id);
        set(1, username);
        set(2, submissionDatetime);
        set(3, iteration);
    }
}

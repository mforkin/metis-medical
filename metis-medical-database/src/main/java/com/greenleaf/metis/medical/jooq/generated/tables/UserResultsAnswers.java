/*
 * This file is generated by jOOQ.
 */
package com.greenleaf.metis.medical.jooq.generated.tables;


import com.greenleaf.metis.medical.jooq.generated.Keys;
import com.greenleaf.metis.medical.jooq.generated.Public;
import com.greenleaf.metis.medical.jooq.generated.tables.records.UserResultsAnswersRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserResultsAnswers extends TableImpl<UserResultsAnswersRecord> {

    private static final long serialVersionUID = 1186673954;

    /**
     * The reference instance of <code>public.user_results_answers</code>
     */
    public static final UserResultsAnswers USER_RESULTS_ANSWERS = new UserResultsAnswers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserResultsAnswersRecord> getRecordType() {
        return UserResultsAnswersRecord.class;
    }

    /**
     * The column <code>public.user_results_answers.user_results_id</code>.
     */
    public final TableField<UserResultsAnswersRecord, Integer> USER_RESULTS_ID = createField("user_results_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.user_results_answers.answer_id</code>.
     */
    public final TableField<UserResultsAnswersRecord, Integer> ANSWER_ID = createField("answer_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.user_results_answers</code> table reference
     */
    public UserResultsAnswers() {
        this(DSL.name("user_results_answers"), null);
    }

    /**
     * Create an aliased <code>public.user_results_answers</code> table reference
     */
    public UserResultsAnswers(String alias) {
        this(DSL.name(alias), USER_RESULTS_ANSWERS);
    }

    /**
     * Create an aliased <code>public.user_results_answers</code> table reference
     */
    public UserResultsAnswers(Name alias) {
        this(alias, USER_RESULTS_ANSWERS);
    }

    private UserResultsAnswers(Name alias, Table<UserResultsAnswersRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserResultsAnswers(Name alias, Table<UserResultsAnswersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> UserResultsAnswers(Table<O> child, ForeignKey<O, UserResultsAnswersRecord> key) {
        super(child, key, USER_RESULTS_ANSWERS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UserResultsAnswersRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserResultsAnswersRecord, ?>>asList(Keys.USER_RESULTS_ANSWERS__USER_RESULTS_RESULTS_FK, Keys.USER_RESULTS_ANSWERS__USER_RESULTS_ANSWER_ANSWER_FK);
    }

    public UserResults userResults() {
        return new UserResults(this, Keys.USER_RESULTS_ANSWERS__USER_RESULTS_RESULTS_FK);
    }

    public Answer answer() {
        return new Answer(this, Keys.USER_RESULTS_ANSWERS__USER_RESULTS_ANSWER_ANSWER_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserResultsAnswers as(String alias) {
        return new UserResultsAnswers(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserResultsAnswers as(Name alias) {
        return new UserResultsAnswers(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserResultsAnswers rename(String name) {
        return new UserResultsAnswers(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserResultsAnswers rename(Name name) {
        return new UserResultsAnswers(name, null);
    }
}

/*
 * This file is generated by jOOQ.
 */
package com.greenleaf.metis.medical.jooq.generated.tables.records;


import com.greenleaf.metis.medical.jooq.generated.tables.Answer;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AnswerRecord extends UpdatableRecordImpl<AnswerRecord> implements Record6<Integer, Short, String, String, String, String> {

    private static final long serialVersionUID = 1434383737;

    /**
     * Setter for <code>public.answer.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.answer.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.answer.seq</code>.
     */
    public void setSeq(Short value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.answer.seq</code>.
     */
    public Short getSeq() {
        return (Short) get(1);
    }

    /**
     * Setter for <code>public.answer.answer</code>.
     */
    public void setAnswer(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.answer.answer</code>.
     */
    public String getAnswer() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.answer.correct_text</code>.
     */
    public void setCorrectText(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.answer.correct_text</code>.
     */
    public String getCorrectText() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.answer.incorrect_text</code>.
     */
    public void setIncorrectText(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.answer.incorrect_text</code>.
     */
    public String getIncorrectText() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.answer.selected_text</code>.
     */
    public void setSelectedText(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.answer.selected_text</code>.
     */
    public String getSelectedText() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, Short, String, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, Short, String, String, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Answer.ANSWER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field2() {
        return Answer.ANSWER.SEQ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Answer.ANSWER.ANSWER_;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Answer.ANSWER.CORRECT_TEXT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Answer.ANSWER.INCORRECT_TEXT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Answer.ANSWER.SELECTED_TEXT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component2() {
        return getSeq();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getAnswer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getCorrectText();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getIncorrectText();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getSelectedText();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value2() {
        return getSeq();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getAnswer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getCorrectText();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getIncorrectText();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getSelectedText();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnswerRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnswerRecord value2(Short value) {
        setSeq(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnswerRecord value3(String value) {
        setAnswer(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnswerRecord value4(String value) {
        setCorrectText(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnswerRecord value5(String value) {
        setIncorrectText(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnswerRecord value6(String value) {
        setSelectedText(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnswerRecord values(Integer value1, Short value2, String value3, String value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AnswerRecord
     */
    public AnswerRecord() {
        super(Answer.ANSWER);
    }

    /**
     * Create a detached, initialised AnswerRecord
     */
    public AnswerRecord(Integer id, Short seq, String answer, String correctText, String incorrectText, String selectedText) {
        super(Answer.ANSWER);

        set(0, id);
        set(1, seq);
        set(2, answer);
        set(3, correctText);
        set(4, incorrectText);
        set(5, selectedText);
    }
}
